(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{583:function(t,a,l){"use strict";l.r(a);var r=l(4),i=Object(r.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h3",{attrs:{id:"hystrix-能干什么"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-能干什么"}},[t._v("#")]),t._v(" Hystrix 能干什么？")]),t._v(" "),l("h4",{attrs:{id:"服务熔断-break"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#服务熔断-break"}},[t._v("#")]),t._v(" 服务熔断（break）")]),t._v(" "),l("ul",[l("li",[t._v("Hystrix是一个分布式系统的延迟和容错的开源库，在分布式系统中不可避免的会有调用异常，比如超时、异常等")]),t._v(" "),l("li",[t._v("能够保证在一个依赖服务出问题的情况下，不会导致整体服务不可用，避免级联故障，以提高分布式的弹性")]),t._v(" "),l("li",[t._v("熔断器本身像电路保护器，“保险丝”一样的过载保护机制，向调用方返回一个符合预期、可处理的备选相应（FALLBACK），\n而不是长时间的等待或者抛出无法处理的异常；")]),t._v(" "),l("li",[t._v("保证了服务调用方的线程不会被长时间、不必要地的占用，从而避免故障蔓延、服务雪崩。")]),t._v(" "),l("li",[t._v("熔断过程：服务降级->进而熔断->恢复调用链路")])]),t._v(" "),l("h4",{attrs:{id:"服务降级-fallback"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#服务降级-fallback"}},[t._v("#")]),t._v(" 服务降级（fallback）")]),t._v(" "),l("blockquote",[l("p",[t._v("假设对方系统不可用了，向调用方返回一个友好的提示，如系统繁忙，请稍后重试")])]),t._v(" "),l("ul",[l("li",[t._v("确保核心业务功能可用，舍弃部分不重要的功能，以腾出资源给他们。")]),t._v(" "),l("li",[t._v("哪些情况会进行服务降级")]),t._v(" "),l("li",[t._v("程序异常")]),t._v(" "),l("li",[t._v("超时")]),t._v(" "),l("li",[t._v("并发压力大，处理繁忙。。。")])]),t._v(" "),l("h4",{attrs:{id:"服务限流-flowlimit"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#服务限流-flowlimit"}},[t._v("#")]),t._v(" 服务限流（flowlimit）")]),t._v(" "),l("ul",[l("li",[t._v("双11秒杀等高并发操作，严禁一窝蜂的过来挤兑，规范排队，有序进行")])])])}),[],!1,null,null,null);a.default=i.exports}}]);