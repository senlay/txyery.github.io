(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{582:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"feign是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign是什么"}},[t._v("#")]),t._v(" Feign是什么？")]),t._v(" "),n("ul",[n("li",[t._v("Feign 是一个 Java 到 HTTP 的客户端绑定器")]),t._v(" "),n("li",[t._v("Feign 以最小的开销将代码连接到 http APIs，并通过可定制的解码器和错误处理（可以写入任何基于文本的 http APIs）将代码连接到 http APIs。")]),t._v(" "),n("li",[t._v("Feign 通过将注解处理为模板化请求来工作。如创建一个微服务接口，在接口注解@FeignClient,就可以使用微服务调用")]),t._v(" "),n("li",[t._v("feign 整合了ribbon，可在使用Feign时提供负载均衡的http客户端")])]),t._v(" "),n("h4",{attrs:{id:"feign有什么作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign有什么作用"}},[t._v("#")]),t._v(" Feign有什么作用？")]),t._v(" "),n("blockquote",[n("p",[t._v("通过Feign， 我们能把HTTP远程调用对开发者完全透明，得到与调用本地方法一致的编码体验。\n这一点与阿里Dubbo中暴露远程服务的方式类似，区别在于Dubbo是基于私有二进制协议，\n而Feign本质上还是个HTTP客户端。如果是在用Spring Cloud Netflix搭建微服务，那么Feign无疑是最佳选择。")])]),t._v(" "),n("h4",{attrs:{id:"feign怎么用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign怎么用"}},[t._v("#")]),t._v(" Feign怎么用？")]),t._v(" "),n("ul",[n("li",[t._v("引入pom")]),t._v(" "),n("li",[t._v("配置项")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("SpringbootApplication启动类加上@FeignClient注解，以及@EnableDiscoveryClient。\n\n@EnableFeignClients\n@EnableDiscoveryClient\n@SpringBootApplication\npublic class ProductApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(ProductApplication.class, args);\n    }\n}\n\n\n#feign的配置，连接超时及读取超时配置\nfeign:\n  client:\n    config:\n      default:\n        connectTimeout: 5000  # 连接超时\n        readTimeout: 5000 # 读取超时\n        loggerLevel: basic # 日志\n\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\n@FeignClient(value = "CART")\npublic interface CartFeignClient {\n\n    @PostMapping("/cart/{productId}")\n    Long addCart(@PathVariable("productId")Long productId);\n}\n\n\n//这里直接注入feign client\n@Autowired\nprivate CartFeignClient cartFeignClient;\n\n@PostMapping("/toCart/{productId}")\npublic ResponseEntity addCart(@PathVariable("productId") Long productId){\n    Long result = cartFeignClient.addCart(productId);\n    return ResponseEntity.ok(result);\n}\n\n\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br")])]),n("h4",{attrs:{id:"feignclient注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feignclient注解"}},[t._v("#")]),t._v(" FeignClient注解")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("属性名")]),t._v(" "),n("th",{staticStyle:{"text-align":"right"}},[t._v("默认值")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("空字符串")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("调用服务名称，和value属性相同")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("fallback")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("void.class")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("熔断机制，调用失败时，走的一些回退方法，可以用来抛出异常或给出默认返回数据。\t底层依赖hystrix，启动类要加上@EnableHystrix")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("url")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("空字符串")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("全路径地址或hostname，http或https可选")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("decode404")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("配置响应状态码为404时是否应该抛出FeignExceptions")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("path")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("{}")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("自动给所有方法的requestMapping前加上前缀，类似与controller类上的requestMapping,参考FeignClientsConfiguration")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("configuration")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("空字符串")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("自定义当前feign client的一些配置")])])])]),t._v(" "),n("h4",{attrs:{id:"feign自定义处理返回的异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign自定义处理返回的异常"}},[t._v("#")]),t._v(" Feign自定义处理返回的异常")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StashErrorDecoder")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ErrorDecoder")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" methodKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("499")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里是给出的自定义异常")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StashClientException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reason")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("599")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里是给出的自定义异常")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StashServerException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reason")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里是其他状态码处理方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("methodKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("h4",{attrs:{id:"微服务客户端调用服务提供者提供接口实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微服务客户端调用服务提供者提供接口实现方式"}},[t._v("#")]),t._v(" 微服务客户端调用服务提供者提供接口实现方式")]),t._v(" "),n("ul",[n("li",[t._v("JDK原生的URLConnection")]),t._v(" "),n("li",[t._v("Apache的Http Client")]),t._v(" "),n("li",[t._v("Netty的异步HTTP Client")]),t._v(" "),n("li",[t._v("Spring的RestTemplate")]),t._v(" "),n("li",[t._v("Feign")])]),t._v(" "),n("h4",{attrs:{id:"feign原理简述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign原理简述"}},[t._v("#")]),t._v(" Feign原理简述")]),t._v(" "),n("ul",[n("li",[t._v("启动时，程序会进行包扫描，扫描所有包下所有@FeignClient注解的类，并将这些类注入到spring的IOC容器中。当定义的Feign中的接口被调用时，通过JDK的动态代理来生成RequestTemplate。")]),t._v(" "),n("li",[t._v("RequestTemplate中包含请求的所有信息，如请求参数，请求URL等。")]),t._v(" "),n("li",[t._v("RequestTemplate声名Request，然后将Request交给client处理，这个client默认是JDK的HTTPUrlConnection，也可以是OKhttp、Apache的HTTPClient等。")]),t._v(" "),n("li",[t._v("最后client封装成LoadBaLanceClient，结合ribbon负载均衡地发起调用")])]),t._v(" "),n("h4",{attrs:{id:"feign开启gzip压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign开启gzip压缩"}},[t._v("#")]),t._v(" Feign开启GZIP压缩")]),t._v(" "),n("ul",[n("li",[t._v("Spring Cloud Feign支持对请求和响应进行GZIP压缩，以提高通信效率。")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('feign:\n  compression:\n    request: #请求\n      enabled: true #开启\n      mime-types: text/xml,application/xml,application/json #开启支持压缩的MIME TYPE\n      min-request-size: 2048 #配置压缩数据大小的下限\n    response: #响应\n      enabled: true #开启响应GZIP压缩\n      \n      \n      \n      \n      注意：\n      \n      由于开启GZIP压缩之后，Feign之间的调用数据通过二进制协议进行传输，返回值需要修改为ResponseEntity<byte[]>才可以正常显示，否则会导致服务之间的调用乱码。\n      \n      示例如下：\n      \n      \n      @PostMapping("/order/{productId}")\n      ResponseEntity<byte[]> addCart(@PathVariable("productId") Long productId);\n      \n      \n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br")])]),n("h4",{attrs:{id:"远程调用-dubbo-与-feign-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程调用-dubbo-与-feign-的区别"}},[t._v("#")]),t._v(" 远程调用 Dubbo 与 Feign 的区别")]),t._v(" "),n("h5",{attrs:{id:"一、相同点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、相同点"}},[t._v("#")]),t._v(" 一、相同点")]),t._v(" "),n("blockquote",[n("p",[t._v("Dubbo 与 Feign 都依赖注册中心、负载均衡。")])]),t._v(" "),n("h5",{attrs:{id:"二、区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、区别"}},[t._v("#")]),t._v(" 二、区别")]),t._v(" "),n("h6",{attrs:{id:"_1、协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、协议"}},[t._v("#")]),t._v(" 1、协议")]),t._v(" "),n("ul",[n("li",[t._v("Dubbo：")]),t._v(" "),n("li",[t._v("支持多传输协议(Dubbo、Rmi、http、redis等等)，可以根据业务场景选择最佳的方式。非常灵活。")]),t._v(" "),n("li",[t._v("默认的Dubbo协议：利用Netty，TCP传输，单一、异步、长连接，适合数据量小、高并发和服务提供者远远少于消费者的场景。")]),t._v(" "),n("li",[t._v("Feign：")]),t._v(" "),n("li",[t._v("基于Http传输协议，短连接，不适合高并发的访问。")])]),t._v(" "),n("h5",{attrs:{id:"_2、负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、负载均衡"}},[t._v("#")]),t._v(" 2、负载均衡")]),t._v(" "),n("ul",[n("li",[t._v("Dubbo：")])]),t._v(" "),n("blockquote",[n("p",[t._v("支持4种算法（随机、轮询、活跃度、Hash一致性），而且算法里面引入权重的概念。\n配置的形式不仅支持代码配置，还支持Dubbo控制台灵活动态配置。\n负载均衡的算法可以精准到某个服务接口的某个方法。")])]),t._v(" "),n("ul",[n("li",[t._v("Feign：")])]),t._v(" "),n("blockquote",[n("p",[t._v("只支持N种策略：轮询、随机、ResponseTime加权。\n负载均衡算法是Client级别的。")])]),t._v(" "),n("h5",{attrs:{id:"_3、容错策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、容错策略"}},[t._v("#")]),t._v(" 3、容错策略")]),t._v(" "),n("ul",[n("li",[t._v("Dubbo：")])]),t._v(" "),n("blockquote",[n("p",[t._v("支持多种容错策略：failover、failfast、brodecast、forking等，也引入了retry次数、timeout等配置参数。")])]),t._v(" "),n("ul",[n("li",[t._v("Feign：")])]),t._v(" "),n("blockquote",[n("p",[t._v("利用熔断机制来实现容错的，处理的方式不一样。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);