(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{509:function(s,n,e){"use strict";e.r(n);var t=e(4),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h4",{attrs:{id:"powermockito常用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#powermockito常用方法"}},[s._v("#")]),s._v(" PowerMockito常用方法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1.Answer interface:\n见名知意，即返回不同的结果，但是根据传入参数去判断，在返回处重写方法去判断，返回结果\n\n2.mock、spy、when、verify\n上述几个都是Mockito的常用静态方法\n2.1 通过`PowerMockito.mock(Class<T> clazz)`可以创建一个mock的对象实例\n2.2 对Mock的对象，使用类似PowerMockito.when(mockObject.someMethod(someArg)).thenReturn(resultYouExpected)的语法，我们可以mock对象的行为的返回值。需要注意的是：mock的对象，所有没有调用when设置过的方法，在测试时调用，返回的都是对应返回类型的默认值\n2.3 测试时，希望对行为进行验证，可以使用类似`PowerMockito.verify(mockObject[,times(int)]).someMethod(somgArgs)`的语法，验证mock的对象，方法是否执行过，执行过几次.\n2.4 特别的，对于希望调用后什么都不做的，或者抛出异常的，可以使用`PowerMockito.doNothing().when(...)...`、`doThrow(Throwable).when(...)...`的语法.\n2.5 如果一个对象，只希望mock它的部分方法，而其他方法希望和真实对象的行为一样，可以使用PowerMockito.spy(Class<T> clazz)代替PowerMockito.mock(Class<T> clazz)方法，其后的设置依旧，这时，没有通过when设置过的方法，测试调用时，行为和真实对象一样.\n\n3.通配符\n3.1 可能存在这种情况：测试时对于传入的参数或者传出的参数并不关心，这时可以使用通配符：通过PowerMockito.anyInt()、PowerMockito.anyString、甚至PowerMockito.any(Class<T> clazz)……来表示任意值，需要注意的是，如果一个方法中，有一个地方使用了通配符，其他参数也都要使用通配符，对于特定的参数，不能直接指定，而需要使用PowerMockito.eq(someArg)来通配这个参数。\n\n4. 阻止静态方法的执行 @SupressStaticInitializationFor\n4.1一些静态块的代码，可能测试的时候不想让它们在类加载的时候执行，这个时候，可以使用`@SuppressStaticInitializationFor("会执行静态方法的全限定名")`来阻止执行\n\n\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);