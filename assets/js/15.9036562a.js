(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{505:function(s,n,t){"use strict";t.r(n);var e=t(4),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h4",{attrs:{id:"powermock项目中实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#powermock项目中实例"}},[s._v("#")]),s._v(" PowerMock项目中实例")]),s._v(" "),t("ul",[t("li",[s._v("如以下TransOrderListServiceImpl服务类中依赖IImssFeignClient外部服务，可以通过PowerMock方式测试")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.test.demo.service.impl;\n\n\nimport com.test.common.core.exception.SysAppException;\nimport com.test.common.core.StringUtils.DateStringUtils;\nimport com.test.common.core.StringUtils.StringUtils;\nimport com.test.common.web.WebConstants;\nimport com.test.demo.client.IImssFeignClient;\nimport com.test.demo.dao.IStafDao;\nimport com.test.demo.vo.*;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.MockitoAnnotations;\nimport org.mockito.invocation.InvocationOnMock;\nimport org.mockito.stubbing.Answer;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({StringUtils.class, DateStringUtils.class})\npublic class TransOrderListDemoServiceImplTest {\n\n    @InjectMocks\n    private TransOrderListServiceImpl transOrderListService = new TransOrderListServiceImpl();\n\n    @Mock\n    private IImssFeignClient ImssFeignClient;\n\n    @Mock\n    private IStafDao stafDao;\n\n    @Before\n    public void setUp() {\n        MockitoAnnotations.initMocks(this);\n    }\n\n\n    /**\n     * 依赖外部服务ImssFeignClient，通过mock测试\n     *\n     * @throws SysAppException\n     */\n    @Test\n    public void transOrderListVoTest() throws SysAppException {\n        List<OrderInfVo> OrderInfVoList = new ArrayList<>();\n        OrderInfVo InfVo = new OrderInfVo();\n        OrderInfVoList.add(InfVo);\n\n        ApplyVo ApplyVo = new ApplyVo();\n\n        CustVo custVo = new CustVo();\n        custVo.setCustCode("123");\n        custVo.setTaxFlag("T");\n        PowerMockito.when(ImssFeignClient.qryInfoForOrder(Mockito.any(CustVo.class))).thenReturn(custVo);\n        CustCreditVo custCreditVo = new CustCreditVo();\n        custCreditVo.setCustCode("123");\n        PowerMockito.when(ImssFeignClient.qryCInfoForOrder(Mockito.any(CustVo.class))).thenReturn(custCreditVo);\n\n        UserVo UserVo = new UserVo();\n        UserVo.setStaffId(1L);\n        PowerMockito.when(stafDao.qryStaff(Mockito.anyLong())).thenReturn(UserVo);\n\n        AddressVo addressVo = new AddressVo();\n        addressVo.setCustId(1L);\n        addressVo.setDefShipAddressFlag(WebConstants.FLAG_TRUE);\n        PowerMockito.when(ImssFeignClient.queryAddressInfo(Mockito.any(AddressVo.class))).thenReturn(addressVo);\n\n        // Answer 见名知意，即返回不同的结果，但是根据传入参数去判断，在返回处重写方法去判断，返回结果\n        PowerMockito.when(ImssFeignClient.queryAddressInfo(Mockito.any(AddressVo.class))).then(new Answer<AddressVo>() {\n\n            @Override\n            public AddressVo answer(InvocationOnMock invocationOnMock) throws Throwable {\n                Object[] arguments = invocationOnMock.getArguments();\n                if (arguments != null) {\n                    AddressVo AddressVo = (AddressVo) arguments[0];\n                    if (StringUtils.isEmpty(AddressVo)) {\n                        throw new SysAppException("AddressVo is null");\n                    }\n                    if (AddressVo.getCustId() == 1L) {\n                        AddressVo.setAddressCode("12121");\n                        return AddressVo;\n                    }\n                }\n                return null;\n            }\n        });\n\n        transOrderListService.transOrderListVo(OrderInfVoList, ApplyVo);\n\n    }\n}\n\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br")])]),t("h4",{attrs:{id:"引申"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引申"}},[s._v("#")]),s._v(" 引申")]),s._v(" "),t("ul",[t("li",[s._v("测试驱动开发\n英文全称Test-Driven Development，简称TDD，是一种不同于传统[软件开发流程]开发代码之前先编写测试代码，然后只编写使测试通过的功能代码，通过测试来推动整个开发的进行。这有助于编写简洁可用和高质量的代码，并加速开发过程。")]),s._v(" "),t("li",[s._v("生动释义\t\n举个比较生动的例子，这个例子你一定已经在很多关于TDD的文献资料上都看到过，但它确实是一个不错的比喻。在此我进行了一些加工和扩展。")])]),s._v(" "),t("p",[s._v("盖房子的时候，工人师傅砌墙，会先用桩子拉上线，以使砖能够垒的笔直，因为垒砖的时候都是以这根线为基准的。TDD就像这样，先写测试代码，就像工人师傅先用桩子拉上线，然后编码的时候以此为基准，只编写符合这个测试的功能代码。")]),s._v(" "),t("p",[s._v("而一个新手或菜鸟级的小师傅，却可能不知道拉线，而是直接把砖往上垒，垒了一些之后再看是否笔直，这时候可能会用一根线，量一下砌好的墙是否笔直，如果不直再进行校正，敲敲打打。使用传统的"),t("a",{attrs:{href:"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("软件开发过程"),t("OutboundLink")],1),s._v("就像这样，我们先编码，编码完成之后才写测试程序，以此检验已写的代码是否正确，如果有错误再一点点修改。")]),s._v(" "),t("p",[s._v("你是希望先砌墙再拉线，还是希望先拉线再砌墙呢？如果你喜欢前者，那就算了，而如果你喜欢后者，那就转入TDD阵营吧！")])])}),[],!1,null,null,null);n.default=r.exports}}]);