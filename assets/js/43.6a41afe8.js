(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{541:function(v,l,_){"use strict";_.r(l);var o=_(4),t=Object(o.a)({},(function(){var v=this,l=v.$createElement,_=v._self._c||l;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("系统在线上运行，代码中通过日志记录系统的运行状态。日志被采集以后，可以通过查看到系统打印的日志。\n运维和开发人员通过日志了解系统的状态，通过异常日志定位系统问题，进行异常治理。\n开发过程中，测试和开发通过日志发现问题和定位问题，解决问题。")])]),v._v(" "),_("h4",{attrs:{id:"为什么要做日志"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要做日志"}},[v._v("#")]),v._v(" 为什么要做日志？")]),v._v(" "),_("ul",[_("li",[v._v("审计跟踪")])]),v._v(" "),_("blockquote",[_("p",[v._v("程序一旦出现错误，需要知道如何处理？是什么地方出现了问题，什么环境，什么问题引起的错误？通过日志快速定位问题")])]),v._v(" "),_("ul",[_("li",[v._v("跟踪应用的警告和错误")])]),v._v(" "),_("blockquote",[_("p",[v._v("为了识别错误信息，将日志分为警告和错误信息，这些都是可以跟踪并予以解决的。")])]),v._v(" "),_("ul",[_("li",[v._v("跟踪崩溃的bug")])]),v._v(" "),_("blockquote",[_("p",[v._v("在开发过程中，开发可以跟踪日志，日志可以帮助开发和测试人员快速发现问题。")])]),v._v(" "),_("ul",[_("li",[v._v("跟踪性能下降的原因")])]),v._v(" "),_("blockquote",[_("p",[v._v("对于产品反映出来的性能问题，如接口超时、查询超时开发都是难以快速定位的，也很难在开发过程中暴露出来。这需要全面的跟踪日志详情，通过全面的日志执行时间记录可以很方便的定位问题找出系统性能的瓶颈。")])]),v._v(" "),_("h4",{attrs:{id:"日志设计的原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日志设计的原则"}},[v._v("#")]),v._v(" 日志设计的原则")]),v._v(" "),_("ul",[_("li",[v._v("需要明确日志级别，明确不同日志的用途，对日志进行分类，日志格式要规范。")])]),v._v(" "),_("blockquote",[_("p",[v._v("日志从功能来说，可分为诊断日志、统计日志、审计日志。\n诊断日志， 典型的有：  请求入口和出口；外部服务调用和返回；资源消耗操作: 打开文件等；程序异常： 譬如数据库无法连接；启动、关闭、配置加载等。\n统计日志：用户访问统计。\n审计日志：将不同需求的日志记入到不同的日志文件中，可以方便相关问题（管理平台操作审计，用户操作计费等）的处理。针对每一种需求，需要对日志的格式，日志记录的内容等进行特别的记录。\n格式统一：通过一个函数来规范日志格式，所有开发人员便可以通过该接口实现统一的日志。")])]),v._v(" "),_("ul",[_("li",[v._v("要把日志的大小，如何切分，如何删除等作为规范建立起来")])]),v._v(" "),_("blockquote",[_("p",[v._v("日志文件不宜过大，过大的日志文件对于日志监控，问题定位等都会带来不便。因此需要进行日志文件的切分，日志文件应该按天来分割，还是按照小时来分割，应该根据日志量来决定，原则就是方便开发或运维人员能快速查找日志。为了防止日志文件将整个磁盘空间占满，需要定期对日志文件进行删除")])]),v._v(" "),_("ul",[_("li",[v._v("日志文件分类")])]),v._v(" "),_("blockquote",[_("p",[v._v("业务日志（系统名称缩写-service.log）、错误日志(系统名称缩写-error.log)、其他日志（other.log）、其他错误日志（other-error.log）、监控日志（系统名称缩写-monitor.log）")])]),v._v(" "),_("h4",{attrs:{id:"日志级别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日志级别"}},[v._v("#")]),v._v(" 日志级别")]),v._v(" "),_("blockquote",[_("p",[v._v("Logger 可以被分配级别。级别包括：TRACE、DEBUG、INFO、WARN 和 ERROR，定义于 ch.qos.logback.classic.Level类。如果 logger没有被分配级别，那么它将从有被分配级别的最近的祖先那里继承级别。root logger 默认级别是 DEBUG。")])]),v._v(" "),_("ul",[_("li",[v._v("ERROR：运行时异常以及预期之外的错误。")]),v._v(" "),_("li",[v._v("WARN：预期之外的运行时状况，不一定是错误的情况。")]),v._v(" "),_("li",[v._v("INFO：运行时产生的事件。")]),v._v(" "),_("li",[v._v("DEBUG：与程序运行时的流程相关的详细信息。")]),v._v(" "),_("li",[v._v("TRACE：更加具体的详细信息。")])]),v._v(" "),_("blockquote",[_("p",[v._v("级别排序为： TRACE < DEBUG < INFO < WARN < ERROR")])])])}),[],!1,null,null,null);l.default=t.exports}}]);